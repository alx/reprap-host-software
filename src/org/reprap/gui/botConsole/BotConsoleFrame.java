/*
 * BotConsoleFrame.java
 *
 * Created on 28 March 2008, 08:35
 */

package org.reprap.gui.botConsole;

import org.reprap.Preferences;
import org.reprap.comms.Communicator;
import org.reprap.comms.snap.SNAPAddress;
import org.reprap.comms.snap.SNAPCommunicator;
import org.reprap.devices.GenericExtruder;
import org.reprap.gui.Utility;
import javax.swing.JOptionPane;
/**
 *
 * @author  Ed Sells
 */
public class BotConsoleFrame extends javax.swing.JFrame {
    
    /** Creates new form BotConsoleFrame */
    public BotConsoleFrame() {
        try {
            initComms();
        }
        catch (Exception e) {
            System.out.println("Failure trying to initialise comms in botConsole: " + e);
            JOptionPane.showMessageDialog(null, e.getMessage());
            return;
        }
        initComponents();
    }
    
    // Comms variables
    private final int localNodeNumber = 0;
    private Communicator communicator;
    private GenericExtruder extruder = null;
    
    
    private void initComms() throws Exception {
        SNAPAddress myAddress = new SNAPAddress(localNodeNumber);
		
        String port = Preferences.loadGlobalString("Port(name)");
        String err = "";

        try {
                communicator = new SNAPCommunicator(port, myAddress);
        }
        catch (gnu.io.NoSuchPortException e)
        {
                err = "There was an error opening " + port + ".\n\n";
                err += "Check to make sure that is the right path.\n";
                err += "Check that you have your serial connector plugged in.";

                throw new Exception(err);
        }
        catch (gnu.io.PortInUseException e)
        {
                err = "The " + port + " port is already in use by another program.";

                throw new Exception(err);
        }

        if (err.length() == 0)
        {
                extruder = new GenericExtruder(communicator,
                                new SNAPAddress(Preferences.loadGlobalString("Extruder0_Address")),
                                Preferences.getGlobalPreferences(), 0);
        }
    }
    
//    	public void dispose() {
//
//		super.dispose();
//		if (extruder != null)
//			extruder.dispose();
//		if (motorX != null)
//			motorX.dispose();
//		if (motorY != null)
//			motorY.dispose();
//		if (motorZ != null)
//			motorZ.dispose();
//		if (communicator != null)
//			communicator.dispose();
//	}
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        printTabPanel1 = new org.reprap.gui.botConsole.PrintTabPanel();
        xYZTabPanel1 = new org.reprap.gui.botConsole.XYZTabPanel();
        genericExtruderTabPanel1 = new org.reprap.gui.botConsole.GenericExtruderTabPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addTab("Print", printTabPanel1);
        jTabbedPane1.addTab("XYZ", xYZTabPanel1);
        jTabbedPane1.addTab("Extruder #X", genericExtruderTabPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BotConsoleFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.reprap.gui.botConsole.GenericExtruderTabPanel genericExtruderTabPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.reprap.gui.botConsole.PrintTabPanel printTabPanel1;
    private org.reprap.gui.botConsole.XYZTabPanel xYZTabPanel1;
    // End of variables declaration//GEN-END:variables
    
}
